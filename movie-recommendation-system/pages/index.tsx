import Head from 'next/head';
import React, { useEffect, useState } from 'react';
import Data from '@/data.json';
import axios from 'axios';
import SearchBar from '@/components/searchBar';
import RecommedationList from '@/components/recommedationsList';
import SuggestionsList from '@/components/suggestionsList';

export default function Home() {
  // Input
  const [input, setInput] = useState('');
  const [inputIndex, setInputIndex] = useState(-1);

  // Lists
  const [suggestions, setSuggestions] = useState<string[]>([]);
  const [recommedations, setRecommedations] = useState<string[]>([]);

  const [toggleRec, setToggleRec] = useState(false);
  const [searchedFor, setSearchedFor] = useState('');

  // Title
  const title = toggleRec
    ? `Recommendations for "${searchedFor}"`
    : 'Suggestions';

  const display =
    inputIndex === -1
      ? input
      : toggleRec
      ? recommedations[inputIndex]
      : suggestions[inputIndex];

  // update suggestion list every time input changes
  useEffect(() => {
    const suggestedList = Data.title
      .filter((value) => value.toLowerCase().startsWith(input.toLowerCase()))
      .slice(0, 10);
    setSuggestions(suggestedList);
  }, [input]);

  const _suggestions = (e: React.ChangeEvent<HTMLInputElement>) => {
    setInput(e.target.value);
    setInputIndex(-1);
    setToggleRec(false);
  };

  const _search = async (value: string) => {
    setInput('');
    setInputIndex(-1);
    setToggleRec(true);
    setSearchedFor(value);

    const recommedation_list_res = await axios<string[]>(
      `http://127.0.0.1:8000/movies/?name=${value}`
    );
    const recommedation_list = await recommedation_list_res.data;
    if (recommedation_list === null) return setRecommedations([]);
    setRecommedations(recommedation_list);
  };

  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.code === 'ArrowDown') {
      e.preventDefault();
      if (toggleRec) {
        if (inputIndex + 1 >= recommedations.length) return setInputIndex(0);
        setInputIndex(inputIndex + 1);
      } else {
        if (inputIndex + 1 >= suggestions.length) return setInputIndex(0);
        setInputIndex(inputIndex + 1);
      }
    }
    if (e.code === 'ArrowUp') {
      e.preventDefault();
      if (toggleRec) {
        if (inputIndex - 1 < -1)
          return setInputIndex(recommedations.length - 1);
        setInputIndex(inputIndex - 1);
      } else {
        if (inputIndex - 1 < -1) return setInputIndex(suggestions.length - 1);
        setInputIndex(inputIndex - 1);
      }
    }
    if (e.code === 'Enter') _search(display);
  };

  return (
    <>
      <Head>
        <title>Movie Recommendation</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-slate-900 min-h-screen text-white pt-10">
        <div className="max-w-md m-auto flex flex-col">
          {/* Title */}
          <h1 className="font-bold text-2xl mb-2">
            Movie Recommendation System
          </h1>

          {/* Search Bar */}
          <SearchBar
            display={display}
            _search={_search}
            _suggestions={_suggestions}
            handleKeyDown={handleKeyDown}
          />

          {/* Recommendations / Suggestions List */}
          <div>
            <h2 className="font-bold text-xl py-2">{title}</h2>
            <div className="flex flex-col">
              {toggleRec ? (
                <RecommedationList
                  recommedations={recommedations}
                  _search={_search}
                  inputIndex={inputIndex}
                />
              ) : (
                <SuggestionsList
                  suggestions={suggestions}
                  inputIndex={inputIndex}
                  _search={_search}
                />
              )}
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
